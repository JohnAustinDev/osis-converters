# Example command file
# see paratext2imp.pl for more information
#
# ABOUT SFM & COMMAND FILES:
#  -SFM files must be UTF-8 encoded.
#
#  -The CF_paratext2imp.txt command file is executed from top to
#   bottom. All settings remain in effect until/unless changed (so
#   settings may be set more than once). All SFM files are processed 
#   and added to the IMP file in the order in which they appear in 
#   the command file. Books are processed using all settings 
#   previously set in the command file.
#
#  -Some less commonly used settings are not included in this example
#   command file. See paratext2imp.pl for a complete listing.
#
########################################################################

# If the glossary contains images, set the path to the directory 
# containing the images here. Otherwise images will not be included.
SET_imageDir:

# Set to true to convert scripture references into reference links. 
# See the CF_addScripRefLinks.txt command file for more info.
SET_addScripRefLinks:false

# Set to true to convert glossary see also entries into reference
# links. See the CF_addSeeAlsotLinks.txt command file for more info.
SET_addSeeAlsoLinks:false

SPECIAL_CAPITALS:i->İ ı->I

# The following are regular expressions applied to all SFM. The inner-
# most matched () grouping is retained within corresponding OSIS tags, 
# and the rest of the match is dropped. Replacements are always made in
# the following order, regardless of their order in this command file: 
# GLOSSARY_ENTRY, BOLD, ITALIC, REMOVE, SEE_ALSO, CROSSREF, FOOTNOTE.

GLOSSARY_ENTRY:(\\m \\k (.*?)\\k\*)
BOLD:
ITALIC:
REMOVE:(\\m )
SEE_ALSO:(([^\s>]+)\*)
CROSSREF:
FOOTNOTE:

# The following settings are are all Perl regular expressions used 
# to handle tags which occur at the beginning of new lines. The "\" 
# before each tag should not be included. Multiple tags separated by 
# OR "|" operators should be ordered from longest tag to shortest.

IGNORE:(id|mt|b|h)
BLANK_LINE:(li1)
PARAGRAPH:
PARAGRAPH2:
PARAGRAPH3:

# The following are used to parse tables. 
TABLE_ROW_START:(\\tr )
TABLE_COL1:(\\th1 |\\tc1 )
TABLE_COL2:(\\th2 |\\tc2 )
TABLE_COL3:(\\th3 |\\tc3 )
TABLE_COL4:(\\th4 |\\tc4 )
TABLE_ROW_END:(\n)

RUN:./orig/A9GLOTUREV.SFM
